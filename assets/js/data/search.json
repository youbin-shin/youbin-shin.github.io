[ { "title": "[programmers] 섬 연결하기 (python)", "url": "/posts/sp-programmers-42861/", "categories": "Solve coding problems, programmers", "tags": "programmers, python, greedy, Kruskal, mst", "date": "2021-02-12 12:33:00 +0900", "snippet": "섬 연결하기 문제 바로가기 코딩 테스트 연습 &amp;gt; 탐욕법(Greedy) &amp;gt; 섬 연결하기 level 3해결 방법주요 변수 설명p 리스트를 통해 섬(노드)이 어느 섬과 연결되었는지 또는 연결이 안되었는지 확인가능하다. p의 초기 설정(n = 4일 때 가정) p = [0, 1, 2, 3] 각 인덱스마다 자기 자신의 섬과 연결된 것으로 기본 설정을 한다. ex) 초기 설정에서 만약 0번 섬과 1번 섬이 연결되었을 경우 p는 다음과 같다. p = [0, 0, 2, 3] ..." }, { "title": "[Algorithm] MST에 대한 모든 것! with 크루스칼 알고리즘, 프림 알고리즘 (python)", "url": "/posts/cs-algorithm-3/", "categories": "Computer Science, Algorithm", "tags": "Algorithm, Computer Science, CS, MST, spanning tree, Kruskal, greedy, Prim, python", "date": "2021-02-12 12:33:00 +0900", "snippet": "Spanning Tree란? spanning tree = 신장 트리 = 스패닝 트리MST에 대해 알기 위해서는 먼저 Spanning Tree에 대해 알아야 합니다.spanning tree란 그래프 내의 모든 정점을 포함하는 트리로 그래프의 최소 연결 부분 그래프입니다.즉 다음의 2가지 조건을 모두 만족하는 그래프가 spanning tree입니다. n개의 정점 + (n - 1)개의 간선으로 연결된 그래프 → 필연적 트리 형태 모든 정점이 연결되어 있지만 사이클이 존재하지 않는 그래프다음 그래프와 같이 5개의 정점을 4개의 ..." }, { "title": "[baekjoon] 13460. 구슬 탈출2 (python)", "url": "/posts/sp-baekjoon-13460/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2021-02-06 11:10:00 +0900", "snippet": "13460. 구슬 탈출2 문제 바로가기해결 방법주요 과정 빨간 구슬과 파란 구슬의 위치를 변수에 저장하고 board에 “.”으로 바꾸어 이동할 수 있도록 한다. moveBall 함수를 통해 구슬을 굴려서 이동하는 경우를 찾도록 한다. deque를 이용하여 이동가능한 좌표를 q에 저장하여 BFS로 찾아준다. 이동 가능한 4가지 방향에 따라 pullBall 함수를 통해 방향에 따라 기울였을 때 굴러가는 최종 위치를 찾는다. ..." }, { "title": "[baekjoon] 15684. 사다리 조작 (python)", "url": "/posts/sp-baekjoon-15684/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2021-02-05 11:10:00 +0900", "snippet": "15684. 사다리 조작 문제 바로가기해결 방법사다리 가로선 저장하는 방법사다리의 가로선의 위치를 리스트로 저장하였다. 가로선이 있는 유무에 따라 1과 0을 저장하는 이중 리스트 ladder를 통해 구현했다. H행과 (N-1)의 열로 구성되어 있다.구현 과정 설명 입력받은 값을 통해 사다리의 가로선을 저장하는 ladder 리스트를 만든다. 가로선을 0 부터 3까지 for문을 통해 추가할 수 있도록 한다. 이때 원하는 사다리 조작이 된 경우(if answer != -1) 종료하도록 한다. ..." }, { "title": "[programmers] SQL 고득점 Kit - GROUP BY 문제 답모음 (MySQL)", "url": "/posts/sp-programmers-4/", "categories": "Solve coding problems, programmers", "tags": "programmers, select, sql, group by, MySQL", "date": "2021-02-04 11:33:00 +0900", "snippet": "SQL 고득점 Kit - GROUP BY 문제 답모음 (MySQL)SQL SELECT문 개념 정리하러 가기 SELECT 기본 구문 SELECT &amp;lt;column&amp;gt; FROM &amp;lt;table&amp;gt;[WHERE &amp;lt;condition&amp;gt;][GROUP BY &amp;lt;column&amp;gt;][ORDER BY &amp;lt;column [ASC/DESC]&amp;gt;][LIMIT &amp;lt;integer&amp;gt;]; 고양이와 개는 몇 마리 있을까고양이와 개..." }, { "title": "[baekjoon] 5373. 큐빙 (python)", "url": "/posts/sp-baekjoon-5373/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2021-02-04 11:10:00 +0900", "snippet": "5373. 큐빙 문제 바로가기해결 방법※ Tip! 문제에 대한 추가적인 설명문제에 제시된 예제 입력 1을 보면 다음과 같다.41L-2F+ B+4U- D- L+ R+10L- U- L+ U- L- U- U- L+ U+ U+ 4라는 테스트 케이스 개수가 주어진다. 4번의 각각 테스트케이스에 대한 실행을 끝낸 큐브 앞면의 결과를 출력해야 한다. → 4번의 큐브의 앞면을 출력 필요! 4번의 테스트케이스 실행마다 처음에 큐브는 윗 면은 흰색, 아랫 면은 노란색, 앞 면은 빨간색, 뒷 면은 오렌지색, 왼쪽 면은 ..." }, { "title": "[baekjoon] 14890. 경사로 (python)", "url": "/posts/sp-baekjoon-14890/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2021-02-03 11:10:00 +0900", "snippet": "14890. 경사로 문제 바로가기※ 문제 풀 때 헷갈렸던 점!행에서 경사로를 사용한 위치에 열일 때도 경사로를 사용해도 된다!즉 행일 때 열일 때 경사로의 유무는 별개였다!해결 방법구현 과정1. 행에서 갈 수 있는 길을 탐색한다. rowCheck 함수를 통해 각 행별로 row 리스트에 연속한 수가 몇 개 인지 저장한다. 각 row에 대해 roadCheck 함수를 통해 길이 될 수 있는지 확인한다. row의 길이가 1이면 행의 전체가 모두 같은 높이기에 answer에 +..." }, { "title": "[programmers] SQL 고득점 Kit - SUM, MAX, MIN 문제 답모음 (MySQL)", "url": "/posts/sp-programmers-3/", "categories": "Solve coding problems, programmers", "tags": "programmers, select, sql, sum, max, min, MySQL", "date": "2021-02-02 13:33:00 +0900", "snippet": "SQL 고득점 Kit - SUM, MAX, MIN 문제 답모음 (MySQL)SQL SELECT문 개념 정리하러 가기 SELECT 기본 구문 SELECT &amp;lt;column&amp;gt; FROM &amp;lt;table&amp;gt;[WHERE &amp;lt;condition&amp;gt;][GROUP BY &amp;lt;column&amp;gt;][ORDER BY &amp;lt;column [ASC/DESC]&amp;gt;][LIMIT &amp;lt;integer&amp;gt;]; 최댓값 구하기최댓값 구하기 문제..." }, { "title": "[baekjoon] 14500. 테트로미노 (python)", "url": "/posts/sp-baekjoon-14500/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2021-02-02 11:10:00 +0900", "snippet": "14500. 테트로미노 문제 바로가기해결 방법주어진 테트로미노에 대한 모든 회전과 대칭에 대한 위치를 tetromino 리스트에 저장한다.주어진 종이 board 의 모든 위치에 가능한 tetromino 를 둔다. 이때 인덱스가 넘어갈 경우 놓인 칸의 합에 대한 비교를 하지 않도록 flag 변수를 두었다. 인덱스가 넘어가지 않을 경우 최종 출력할 max_sum 변수와 비교하여 최대 합일 경우 max_sum 변수에 저장한다.구현한 코드N, M = map(int, input().split())tetromino = [ [[0..." }, { "title": "[2020 KAKAO BLIND RECRUITMENT] 외벽 점검 (python)", "url": "/posts/sp-programmers/", "categories": "Solve coding problems, programmers", "tags": "programmers, python, KAKAO", "date": "2021-02-01 12:33:00 +0900", "snippet": "[2020 KAKAO BLIND RECRUITMENT] 외벽 점검 문제 바로가기 코딩테스트 연습 &amp;gt; 2020 KAKAO BLIND RECRUITMENT &amp;gt; 외벽 점검 level 3해결방법모든 경우를 탐색하여 풀어야 했다. 경로를 어디 위치부터 선택할지는 test_weak를 통해 모든 경우를 탐색했다. 어떤 친구를 위치에 두어야할지는 dist_list 에 순열을 이용하여 정렬하여 모든 경우를 탐색했다.주요 과정 weak 리스트에 각 원소에 n을 더한 값을 추가한다. → 반시계로 도는 경우..." }, { "title": "[programmers] SQL 고득점 Kit - SELECT 문제 답모음 (MySQL)", "url": "/posts/sp-programmers-2/", "categories": "Solve coding problems, programmers", "tags": "programmers, select, sql, MySQL", "date": "2021-02-01 12:33:00 +0900", "snippet": "SQL 고득점 Kit - SELECT 문제 답모음 (MySQL)SQL SELECT문 개념 정리하러 가기 SELECT 기본 구문 SELECT &amp;lt;column&amp;gt; FROM &amp;lt;table&amp;gt;[WHERE &amp;lt;condition&amp;gt;][GROUP BY &amp;lt;column&amp;gt;][ORDER BY &amp;lt;column [ASC/DESC]&amp;gt;][LIMIT &amp;lt;integer&amp;gt;]; 모든 레코드 조회하기모든 레코드 조회하기 문..." }, { "title": "[baekjoon] 12100. 2048(Easy) (python)", "url": "/posts/sp-baekjoon-12100/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2021-02-01 11:10:00 +0900", "snippet": "12100. 2048(Easy) 문제 바로가기해결 방법 board 에 초기 입력값을 이중 리스트로 저장한다. move_ways 에 4가지 방향에 대한 5번의 가능한 이동 방법을 중복 순열을 이용하여 저장한다. 4가지 방향에 대해 왼쪽: 0, 오른쪽: 1, 위: 2, 아래: 3 으로 하였다. move_ways 에 저장된 이동 방법을 하나씩 test_board 에 5번 이동시켜 가장 큰 블록이 있는지 확인한다. 함수 동작 과정right..." }, { "title": "[Database] SQL - SELECT문 정복하기 (MySQL)", "url": "/posts/cs-database-1/", "categories": "Computer Science, Database", "tags": "Database, Computer Science, SQL, select, count, avg, sum, min, max, where, like, order by, limit, group by, MySQL", "date": "2021-01-31 12:33:00 +0900", "snippet": "SELECTSELECT 문은 데이터를 읽을 수 있으며 특정한 테이블을 반환한다. 대소문자 구분없지만 키워드들은 대문자로 구분할 것이다. 키워드: SELECT, FROM기본 구문SELECT &amp;lt;column&amp;gt; FROM &amp;lt;table&amp;gt;[WHERE &amp;lt;condition&amp;gt;][GROUP BY &amp;lt;column&amp;gt;][ORDER BY &amp;lt;column [ASC/DESC]&amp;gt;][LIMIT &amp;lt;integer&amp;gt;]..." }, { "title": "[baekjoon] 17143. 낚시왕 (python)", "url": "/posts/sp-baekjoon-17143/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2021-01-29 11:10:00 +0900", "snippet": "17143. 낚시왕 문제 바로가기해결 방법문제에서 제시된 1초동안 일어나는 과정 낚시왕이 오른쪽으로 한 칸 이동한다. 코드 13번째 줄 for 문을 통해 이동할 수있도록 구현했다. 낚시왕이 있는 열에 있는 상어 중에서 땅과 제일 가까운 상어를 잡는다. 상어를 잡으면 격자판에서 잡은 상어가 사라진다. 낚시왕이 있는 위치(m) 기준으로 열을 탐색하여 0 이 아닌 경우 catch_shark_sum에 상어 크기 더하기 잡은 상어 ocean에서 0으로 만들어 제거하기 b..." }, { "title": "[baekjoon] 16235. 나무 재테크 (python)", "url": "/posts/sp-baekjoon-16235/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2021-01-28 11:10:00 +0900", "snippet": "16235. 나무 재테크 문제 바로가기해결 방법동작 과정동작하는 과정 설명 입력받기 변수 설정 land : 땅의 양분의 양을 저장하는 2차원 리스트 tree : 나무 위치에 나이를 저장할 2차원 리스트 land_food : 겨울에 더해줄 양분을 저장한 2차원 리스트 나무 재테크 동작하기 springSummer() 함수 호출하기 : 봄과 여름에 일어나는 동작을 수행! 나무가 존재하..." }, { "title": "[baekjoon] 17142. 연구소3 (python)", "url": "/posts/sp-baekjoon-17142/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2021-01-27 18:10:00 +0900", "snippet": "17142. 연구소3 문제 바로가기해결 방법참고66% 즈음에서 틀렸습니다.→ 비활성화 상태인 바이러스가 활성화될 때 q 맨 앞에 삽입한 것…!! 활성화되면서 빈칸들보다 먼저 움직이겠다고 혼자 생각해 버렸던 것..!!앞으로 문제에 충실하게 이해하겠다고 성찰할 수 있었습니다. (상상해서 풀지 않기!!)## 코드 21 ~ 24번# before (잘못된 코드)if lab[ny][nx] == 2: q.insert(0, [ny, nx])else: q.append([ny, nx]) complete += 1# after 고친..." }, { "title": "[baekjoon] 19238. 스타트 택시 (python)", "url": "/posts/sp-baekjoon-19238/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2021-01-26 18:10:00 +0900", "snippet": "19238. 스타트 택시 문제 바로가기시간 초과 에러 늪에서 한동안 허우적거린 문제!! 왜 시간 초과가 났는지 최단 경로의 손님을 찾을 때 각 손님별로 BFS를 통해 모든 최단 경로를 구했다.. (BFS를 손님의 수만큼 호출..) 따라서 최단 경로 손님을 찾을 때 BFS를 1번만 동작하도록 고쳤다! 해결 방법문제에서 고려해야할 상황 도달 불가능한 승객 승객은 태웠는데 목적지가 도달 불가한 경우주요 과정 최단 경로 손님 찾기 : findPassenger함수 ★ 택시..." }, { "title": "[baekjoon] 17822. 원판 돌리기 (python)", "url": "/posts/sp-baekjoon-17822/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2021-01-25 18:10:00 +0900", "snippet": "17822. 원판 돌리기 문제 바로가기해결 방법크게 회전하는 부분과 인접한 숫자가 있는지 확인하는 것이 주요 과정이라고 생각했습니다.각 두가지 부분에 대한 구현을 설명하겠습니다. 회전하기 저는 회전하는 것을 구현하기 위해서 슬라이싱을 사용했습니다. k 번 만큼 회전하는 것이기에 반시계 방향일 때는 k 부분을 기준으로 순서를 바꿔주면 됩니다. ex) 1 2 3 4 5 → 반시계 방향으로 2번 회전시키면 3 4 5 ..." }, { "title": "[baekjoon] 17825. 주사위 윷놀이 (python)", "url": "/posts/sp-baekjoon-17825/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2021-01-24 18:10:00 +0900", "snippet": "17825. 주사위 윷놀이 문제 바로가기해결 방법참고 tip) 제출 후 11%에서 틀린 경우에 문제 지문 중 말이 이동을 마치는 칸에 다른 말이 있으면 그 말은 고를 수 없다. 이 부분에 대한 조건을 탄탄하게 해주면 된다. 11 %에서 틀렸을 때 30의 위치가 점수판에 2개인 것을 알고 분기를 다시 해줬습니다. 제출 후 29%에서 틀린 경우에도 앞서 문제가 되었던 다른 말이 있으면 그 말은 고를 수 없다 이부분에 대해 더 고려해야 합니다. 반례 5 5 5 5 5..." }, { "title": "[baekjoon] 16236. 아기상어 (python)", "url": "/posts/sp-baekjoon-16236/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2021-01-23 18:10:00 +0900", "snippet": "16236. 아기상어 문제 바로가기해결 방법주요 과정 살아있는 물고기 정보를 담은 fishes 리스트의 for문을 돌며 먹을 수 있는 물고기를 탐색한다. 상어의 크기보다 물고기의 크기가 작다면 queue를 이용하여 상어에서 물고기 위치까지의 거리를 구하여 eat_fishes 리스트에 추가한다. ※ 주의 사항 : 거리 변수의 초기화값은 float(‘inf’) 로 하자! 크기가 작더라도 먹을 수 없을 수 있다는 점!!! eat_fishes 먹을 수 ..." }, { "title": "[baekjoon] 17144. 미세먼지 안녕! (python)", "url": "/posts/sp-baekjoon-17144/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2021-01-21 18:10:00 +0900", "snippet": "17144. 미세먼지 안녕! 문제 바로가기해결 방법주요 과정for _ in range(T) 안에서 1초동안 일어나는 일을 실행합니다. 이중 for문을 통해 미세먼지를 확산시킵니다. 이때 새로운 n_room에 확산을 저장해야 원하는 확산값을 얻을 수 있습니다. (확산을 room에 바로 하면 X) cleanUp 함수를 통해 윗 방향, 아래방향으로 나눠서 각 방향별로 동작하도록 구현하였습니다. 밑에 그림과 같이 윗쪽 공기청정기가 회색 화살표로 동작하기 위해서 시계 방향(하늘색 화살표)..." }, { "title": "[baekjoon] 20061. 모노미노도미노2 (python)", "url": "/posts/sp-baekjoon-20061/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2021-01-21 15:10:00 +0900", "snippet": "20061. 모노미노도미노 2 문제 바로가기해결 방법다음 체크한 부분을 각각 green_board, blue_board로 두었다! 근데 blue_board를 4X6이 아닌 green_board 처럼 6X4로 설정하였다!! 시계방향으로 90도 회전하고 좌우반전했다고 보고 블록이 들어가도록 설정했습니다! green_board : x 좌표에 의해 위치가 결정된다. blue_board : y 좌표에 의해 위치가 결정된다주요 과정 설명 블록 입력받기 greenBlock 호출! 블록 1, 2, 3..." }, { "title": "[baekjoon] 17837. 새로운 게임2 (python)", "url": "/posts/sp-baekjoon-17837/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2021-01-20 15:10:00 +0900", "snippet": "17837. 새로운 게임 2 문제 바로가기해결 방법 보드의 색을 저장하는 리스트 : board 말의 번호와 방향을 저장하는 리스트 : horse_board 를 이용하여 시뮬레이션을 진행했습니다. while 문 안의 과정 설명 말 번호 0 ~ K -1 순서대로 말의 위치 찾기 말 번호를 찾으면 위치의 칸 색을 확인하기 말 번호와 위에 쌓여있는 말들 저장하는 리스트 : temp 해당 말 번호 밑에 있는 말들 저장하는 리스트 : left 흰색이면 이동하려는..." }, { "title": "[baekjoon] 20057. 마법사 상어와 토네이도 (python)", "url": "/posts/sp-baekjoon-20057/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2021-01-19 15:10:00 +0900", "snippet": "20057. 마법사 상어와 토네이도 문제 바로가기해결 방법 가장 먼저 토네이도 방향을 순서대로 돌기 위한 코드를 작성했습니다. 1 → 1 → 2 → 2→ 3 → 3 → 4 → … 몇 칸을 이동하고 방향이 바뀌는 지의 규칙을 살펴보면 1부터 시작하여 칸의 이동이 2번 같으면 + 1를 하여 이동한다! 따라서 move_cnt라는 리스트를 이용하여 [이동할 칸 수, 해당 칸의 이동이 몇번째인지] 를 저장하여 이동할 칸 수(move_cnt[0])는 처음에 1로 설정하고 move_cnt[1] 가 2가 되면..." }, { "title": "[baekjoon] 20056. 마법사 상어와 파이어볼 (python)", "url": "/posts/sp-baekjoon-20056/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2021-01-18 15:10:00 +0900", "snippet": "20056. 마법사 상어와 파이어볼 문제 바로가기해결 방법주요 과정 모든 파이어볼을 이동한다. 격자의 행과 열은 1번부터 N번까지 번호가 매겨져 있고, 1번 행은 N번과 연결되어 있고, 1번 열은 N번 열과 연결되어 있다. tip) 이때 다음과 같은 문제 조건이 있는 데 이러한 경우 다음의 연산으로 만족시킬 수 있다. x = (x + N) % Ny = (y + N) % N 다음의 연산을 통해 0번 인덱스에서 왼쪽으로 1칸 이동할 때 마지막 인덱스로 이동하는 것을 확인할 수..." }, { "title": "[baekjoon] 20055. 컨베이어벨트 위의 로봇 (python)", "url": "/posts/sp-baekjoon-20055/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2021-01-17 15:10:00 +0900", "snippet": "20055. 컨베이어벨트 위의 로봇 문제 바로가기해결 방법컨테이너의 회전하는 것을 올라가는 위치 변수 up 과 내려가는 위치 변수 down을 조절하여 구현하였습니다.up 과 down의 차이는 N이라는 점을 고려하여 N 사이의 로봇 이동(밑에 문제 인용부분에서의 2번 과정!)만 주의하면 좋을 것 같습니다.회전할 경우 container 리스트에 up, down의 위치 변화를 그림을 통해 살펴보겠습니다.회전할 때 up의 위치와 down의 위치 모두 - 1이동하고 값이 음수를 가질 때 len(container) - 1의 인덱스로 수정..." }, { "title": "[baekjoon] 19237. 어른상어 (python)", "url": "/posts/sp-baekjoon-19237/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2021-01-15 15:10:00 +0900", "snippet": "19237. 어른상어 문제 바로가기※ 주의 tip!테스트 케이스가 다 맞고 제출시 6%에서 틀렸습니다가 뜬다면 시간 조건만 수정해주면 된다!!문제 중 일부 부분 1000가 넘어도 다른 상어가 격자에 남아 있으면 -1을 출력한다.테스트 케이스가 다 맞고 제출시 6%에서 틀렸습니다가 뜬다면 시간 조건만 수정해주면 된다!!문제 중 일부 부분 1000가 넘어도 다른 상어가 격자에 남아 있으면 -1을 출력한다. 을 보고 1000초까지 괜찮은 건 줄 알았는 데 1000초 포함이였습니다~# 고치기 전 beforeif time &amp;gt..." }, { "title": "[baekjoon] 20058. 마법사 상어와 파이어스톰 (python)", "url": "/posts/sp-baekjoon-20058/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2021-01-13 15:10:00 +0900", "snippet": "20058. 마법사 상어와 파이어스톰 문제 바로가기해결 방법핵심 과정은 2가지 단계가 있다. (1. 회전하기 → 2. 얼음 녹이기) 회전하기 ★ 위의 2가지 규칙을 이용하여 다음의 코드를 작성했다. rotate_board[i + j2][j + 2 ** q - i2 - 1] = board[i + i2][j + j2] 이때 규칙을 사용한 부분만 남겨두면 다음과 같다. rotate_board[j2][2 ** q - i2 - 1] = board[i2][j2] 즉, 기준이 되는 위치에 규칙을 ..." }, { "title": "[baekjoon] 17779. 게리맨더링2 (python)", "url": "/posts/sp-baekjoon-17779/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2021-01-13 15:10:00 +0900", "snippet": "17779. 게리맨더링 2 문제 바로가기해결 방법구역을 나누며 선거구에 따른 인구수를 바로 구하고 싶었으나 구역 나누는 것이 헷갈려서 test라는 리스트에 구역을 표시하고 test를 돌며 인구수를 구했습니다 :) 입력을 받은 뒤 가능한 기준점과 경계 길이를 4중 포문을 통해 뽑아낸다. devide 함수를 통해 모든 경우를 완전 탐색하며 가장 많은 선거구와 가장 적은 선거구의 인구 차이 최솟값을 구한다. test라는 리스트에 경계를 먼저 표시한다. ..." }, { "title": "[baekjoon] 19236. 청소년 상어 (python)", "url": "/posts/sp-baekjoon-19236/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2021-01-12 15:10:00 +0900", "snippet": "19236. 청소년 상어 문제 바로가기해결 방법 기본 설정 4행 4열의 리스트인 ocean을 다음과 같이 각 칸에 물고기의 번호와 방향을 저장! 즉 문제에서 제시된 표를 그림과 같이 [상어의 크기, 방향]으로 ocean에 저장한다. 상어에 대한 정보는 sh_y, sh_x, sh_d 변수에 저장한다. ocean에 상어의 위치를 [-1, -1]로 표시한다. 이후 shark 함수를 동작시킨다. shark 함수 shark 함수 안에 move_fish 함수를 넣어 물고기를 이..." }, { "title": "[baekjoon] 3190. 뱀 (python)", "url": "/posts/sp-baekjoon-3190/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2020-10-20 11:10:00 +0900", "snippet": "3190. 뱀 문제 바로가기해결 방법주요 과정 입력값을 통해 필요한 변수들을 설정을 한다. 주요 변수 설명 board : 사과의 위치를 저장한 정사각 보드 리스트 y, x, d : 뱀의 머리 위치와 방향을 저장하는 변수 ★ snake_list : 뱀의 몸이 있는 좌표들을 저장하는 리스트 snake_info : 입력 L개의 줄에 나와있는 뱀의 방향 변환 정보를 저장한 리스트 while 문을 통해 매 초 필요한 뱀의 동작을 구현한다. ..." }, { "title": "[baekjoon] 13458. 시험감독 (python)", "url": "/posts/sp-baekjoon-13458/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2020-10-17 11:10:00 +0900", "snippet": "13458. 시험감독 문제 바로가기해결 방법문제 정리 필요한 감독관(총감독관, 부감독관) 수의 최솟값을 구해야 한다. 총감독관 한 시험장에 감시할 수 있는 응시자 수가 B명! 시험장에 오직 1명만 존재! 부감독관 한 시험장에 감시할 수 있는 응시자의 수가 C명! 시험장에 여러 명 존재 가능 구현 방법 입력을 받고 기본 설정한다. 주요 변수 설명 ..." }, { "title": "[baekjoon] 14501. 퇴사 (python)", "url": "/posts/sp-baekjoon-14501/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2020-10-11 11:10:00 +0900", "snippet": "14501. 퇴사 문제 바로가기해결 방법주요 과정work 함수를 통해 모든 경우의 수를 확인하여 가장 큰 상담 금액(final_income)을 출력한다.work 함수 day를 0 부터 시작하여 각 날에 대해 상담을 하는 경우와 상담을 안하는 경우 두가지를 모두 체크하여 모든 경우를 확인한다. 해당 day에 상담하는 경우 day에 상담할 경우 필요한 시간을 더해주고 income에 상담 금액을 더해준다. 해당 day에 상담하지 않는 경우 ..." }, { "title": "[baekjoon] 14502. 연구소 (python)", "url": "/posts/sp-baekjoon-14502/", "categories": "Solve coding problems, baekjoon", "tags": "baekjoon, python", "date": "2020-10-10 11:10:00 +0900", "snippet": "14502. 연구소 문제 바로가기해결 방법구현 방법 지도에 대한 입력을 area 리스트에 저장하고 이 리스트를 통해 빈칸의 좌표를 empty_area에 저장한다. empty_area : 바이러스와 벽이 없는 칸으로 벽을 세울 수 있는 가능성을 가진 좌표들 빈칸 좌표 중 3개를 선택하는 모든 경우를 계산하여 최대의 안전 영역의 크기를 구한다. combinations 을 이용하여 empty_area 중에서 3개를 조합으로 선택하는 경우를 구하여 경우마다 make_wall 함수를 동작시..." }, { "title": "[programmers] 두 개 뽑아서 더하기 (python, javascript)", "url": "/posts/sp-programmers-1/", "categories": "Solve coding problems, programmers", "tags": "programmers, python, javascript", "date": "2020-08-09 12:33:00 +0900", "snippet": "programmers | 두 개 뽑아서 더하기 코딩 테스트 연습 &amp;gt; 월간 코드 챌린지 시즌 1 &amp;gt; 두 개 뽑아서 더하기 level 1구현한 코드이중 for문을 이용하여 numbers 리스트의 서로 다른 인덱스 두 개가 다 더해지도록 한다.이때 if문을 이용하여 answer에 없는 값만 추가하여 중복이 없도록 한다.오름차순으로 출력하기 위해서 python에서는 sort()를 이용하면 된다.하지만 javascript 같은 경우 sort() 만 사용할 경우 원하는 대로 동작하지 않는 경우가 있다. 예를 ..." }, { "title": "[Web Vue] 1. Vue 기초 다지기", "url": "/posts/web-vue-1/", "categories": "Web, Vue", "tags": "vue, web, evan", "date": "2020-05-23 12:33:00 +0900", "snippet": "Vue 기초Who made Vue.jsEvan You Angular 사용에서 무거운 개념들을 덜어내기 위해 만들었다.Vue.js introwhat Front-End Framework 사용자와 대면해서 사용하는 소프트웨어 SPA(Single Page Application) 제작 1 request 1 response 가 아니라 큰 문서 한장만 받은 다음에 비동기 요청을 통해서 필요한 부분만 갱신하도록! Client-side rendering 데이터를 만들고 사용자가 원하는 화면을..." }, { "title": "[Algorithm] chapter 2. Array1", "url": "/posts/cs-algorithm-1/", "categories": "Computer Science, Algorithm", "tags": "Algorithm, Computer Science, CS, array", "date": "2020-01-31 12:33:00 +0900", "snippet": "배열 일정한 자료형의 변수들을 하나의 이름으로 열거하여 사용하는 자료구조입니다. 여기서 자료형(Data types)은 정수형(integer, long), 실수형(float, double), 문자형(char) 을 의미합니다. 참고) procedual language (절차지향 언어)는 BASIC, C, PASCAL, FORTRAN 등이 있고 object-oriented language(객체 지향 언어)는 python, Java 등이..." }, { "title": "[Algorithm] chapter 1. Algorithm", "url": "/posts/cs-algorithm-2/", "categories": "Computer Science, Algorithm", "tags": "Algorithm, Computer Science, CS", "date": "2020-01-30 12:33:00 +0900", "snippet": "알고리즘이란?유한한 단계를 통해 문제를 해결하기 위한 절차나 방법입니다. 시작과 끝 반드시 존재해야 합니다! 표현 방법 크게 2가지가 있습니다. 슈더코드 ( pseudo code ) 대부분의 알고리즘에서 선호하는 표현방법으로 문법이 따로 존재하는 것은 아닙니다. 순서도 그림을 이용하여 구현하고자 하는 알고리즘을 표현할 수 있습니다. 좋은 알고리즘 기준크게 정확성, 작업량, 최적성★ 3가지가 있습니다..." }, { "title": "[Python 배우기] 4. python 시퀀스(Sequence) 자료형", "url": "/posts/programming-language-python-4/", "categories": "Programming language, Python", "tags": "python", "date": "2020-01-25 01:34:00 +0900", "snippet": "python 시퀀스(sequence) 자료형 시퀀스는 데이터가 순서대로 나열된 형식을 나타낸다. ※ 주의 : 순서대로 나열된 것이 정렬되었다는 뜻이 아니다! 시퀀스 타입 list, tuple, range, string, binary list 리스트 생성 : [], list()tuple ()로 묶어서 표현됨. 튜플 생성 : () immutable (수정 불가능, 불변)하고 읽기만 가능하다. 직접 사용하기 보단 파이썬 내부에서 사용..." }, { "title": "[Python 배우기] 3. python 연산자", "url": "/posts/programming-language-python-3/", "categories": "Programming language, Python", "tags": "python", "date": "2020-01-24 01:34:00 +0900", "snippet": "python 연산자산술 연산자더하기 +a = 3b = 2c = a + bprint(c) # 출력: 5print(10 + 20) # 출력: 30빼기 -a = 5b = 2c = a - bprint(c) # 출력: 3print(10 - 20) # 출력: -10곱하기 *a = 3b = 2c = a * bprint(c) # 출력: 6print(10 * 20) # 출력: 200나누기 /a = 3b = 2c = a / bprint(c) # 출력: 1.5print(10 / 20) # 출력: 0.5몫 구하기 //a = 10b = 5c = a ..." }, { "title": "[Python 배우기] 2. python 자료형", "url": "/posts/programming-language-python-2/", "categories": "Programming language, Python", "tags": "python, type, complex, bool", "date": "2020-01-23 01:34:00 +0900", "snippet": "python 자료형숫자형 (Numbers)int (정수, integers) 모든 정수는 int로 표현된다. python 3.x 버전에서 long 타입 없다.num = 3print(type(num)) # 출력: &amp;lt;class &#39;int&#39;&amp;gt;진수 변환하는 방법10진수 → 2진수, 8진수, 16진수1. bin(), oct(), hex()내장 함수 이용print(bin(10)) # 출력: 0b1010print(oct(10)) # 출력: 0o12print(hex(10)) # 출력: 0xaprint(..." }, { "title": "[Python 배우기] 1. python intro", "url": "/posts/programming-language-python-1/", "categories": "Programming language, Python", "tags": "python, keyword, comment", "date": "2020-01-22 01:34:00 +0900", "snippet": "python intro식별자 식별자 : 변수, 함수, 모듈, 클래스 등을 식별하는데 사용되는 이름(name) 식별자의 이름은 영문 대소문자, 밑줄, 숫자로 구성된다. 첫 글자에 숫자가 올 수 없다. 길이 제한이 없다. 대소문자(case)를 구별한다. 내장 함수나 모듈 등의 이름으로도 만들면 안된다.# 예약어 확인하기import keywordprint(keyword.kwlist)주석 (Comment) 주석은 #으로 표현한다. docstring은 &quot;&quot;&quot;으로 표현한다. 여러 ..." } ]
